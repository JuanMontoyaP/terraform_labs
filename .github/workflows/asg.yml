name: Deploy Auto Scaling Group with Load Balancer
on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "main"
  workflow_dispatch:
    inputs:
      terraform_action:
        description: "Terraform action to perform"
        required: true
        default: "plan"
        type: choice
        options:
          - plan
          - apply
          - destroy

env:
  AWS_REGION: us-east-1

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./alb_asg
    steps:
      - uses: actions/checkout@v5

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v5
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: GitHubActions_tf_labs
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.13.3

      - name: Terraform fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        id: terraform_plan
        if: ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.terraform_action == 'plan' }}
        run: terraform plan -var="aws_role_arn=${{ secrets.AWS_EC2_ROLE }}" -out=tfplan -input=false

      - name: Comment Plan on PR
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: terraform plan result
          message: |
            **Terraform Plan** for commit `${{ github.sha }}`**:
            ```hcl
            ${{ steps.terraform_plan.outputs.stdout }}
            ```
